{"version":3,"file":"simple-carousel.js","sourceRoot":"","sources":["src/simple-carousel.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n * SPDX-License-Identifier: BSD-3-Clause\r\n */\r\n\r\n import { LitElement, html, css, PropertyValues } from \"lit\";\r\n import {\r\n   customElement,\r\n   property,\r\n   state,\r\n   queryAssignedElements,\r\n } from \"lit/decorators.js\";\r\n import { styleMap } from \"lit/directives/style-map.js\";\r\n import {\r\n   AnimationTuple,\r\n   SLIDE_LEFT_IN,\r\n   SLIDE_LEFT_OUT,\r\n   SLIDE_RIGHT_IN,\r\n   SLIDE_RIGHT_OUT,\r\n   BOOTSTRAP_CHEVRON_LEFT,\r\n   BOOTSTRAP_CHEVRON_RIGHT,\r\n } from \"./constants.js\";\r\n \r\n import \"./slide-button.js\";\r\n \r\n @customElement(\"simple-carousel\")\r\n export class SimpleCarousel extends LitElement {\r\n   static override styles = css`\r\n     ::slotted(.slide-hidden) {\r\n       display: none;\r\n     }\r\n \r\n     /** So the elements all overlap */\r\n     ::slotted(*) {\r\n       position: absolute;\r\n       padding: 1em;\r\n       \r\n     }\r\n \r\n     :host {\r\n       display: flex;\r\n       flex-direction: row;\r\n       align-items: center;\r\n       min-width: 500px;\r\n     }\r\n \r\n     #container {\r\n       border-radius: 0;\r\n       display: flex;\r\n       align-items: center;\r\n       justify-content: center;\r\n       flex: 1;\r\n       margin: 0 18px;\r\n       max-height:500px ;\r\n       padding: 1em;\r\n       overflow: hidden;\r\n       position: relative;\r\n \r\n       box-shadow: var(\r\n         --carousel-box-shadow,\r\n         #cccccc 0.2em 0.2em 0.4em\r\n       );\r\n     }\r\n   `;\r\n \r\n   // Assume this is always a valid slide index.\r\n   @property({ type: Number }) slideIndex = 0;\r\n   @state() private containerHeight = 0;\r\n   @queryAssignedElements() private readonly slideElements!: HTMLElement[];\r\n \r\n   /**\r\n    * Return slide index in the range of [0, slideElement.length)\r\n    */\r\n   get wrappedIndex(): number {\r\n     return wrapIndex(this.slideIndex, this.slideElements.length);\r\n   }\r\n \r\n   override render() {\r\n     const containerStyles = {\r\n       height: `${this.containerHeight}px`,\r\n     };\r\n \r\n     return html`<slide-button\r\n         part=\"buttons left-buton\"\r\n         exportparts=\"internal-btn : buttons\"\r\n         @click=${this.navigateToPrevSlide}\r\n       >\r\n         ${BOOTSTRAP_CHEVRON_LEFT}\r\n       </slide-button>\r\n \r\n       <div part=\"container\" id=\"container\" style=\"${styleMap(containerStyles)}\">\r\n         <slot></slot>\r\n       </div>\r\n \r\n       <slide-button\r\n         part=\"buttons right-buton\"\r\n         exportparts=\"internal-btn : buttons\"\r\n         @click=${this.navigateToNextSlide}\r\n       >\r\n         ${BOOTSTRAP_CHEVRON_RIGHT}\r\n       </slide-button>`;\r\n   }\r\n \r\n   override firstUpdated() {\r\n     this.containerHeight = getMaxElHeight(this.slideElements);\r\n     this.initializeSlides();\r\n   }\r\n \r\n   override updated(changedProperties: PropertyValues<this>): void {\r\n     // Not covered in the video, but if you want to drive animations from the\r\n     // 'slideindex' attribute and property, we can calculate the animation in\r\n     // the 'updated' lifecycle callback.\r\n     if (changedProperties.has(\"slideIndex\")) {\r\n       const oldSlideIndex = changedProperties.get(\"slideIndex\");\r\n       if (oldSlideIndex === undefined) {\r\n         return;\r\n       }\r\n       const isAdvancing = this.slideIndex > oldSlideIndex;\r\n \r\n       if (isAdvancing) {\r\n         // Animate forwards\r\n         this.navigateWithAnimation(1, SLIDE_LEFT_OUT, SLIDE_RIGHT_IN);\r\n       } else {\r\n         // Animate backwards\r\n         this.navigateWithAnimation(-1, SLIDE_RIGHT_OUT, SLIDE_LEFT_IN);\r\n       }\r\n     }\r\n   }\r\n \r\n   navigateToNextSlide() {\r\n     // Animation driven by the `updated` lifecycle.\r\n     this.slideIndex += 1;\r\n   }\r\n \r\n   navigateToPrevSlide() {\r\n     // Animation driven by the `updated` lifecycle.\r\n     this.slideIndex -= 1;\r\n   }\r\n \r\n   private async navigateWithAnimation(\r\n     nextSlideOffset: number,\r\n     leavingAnimation: AnimationTuple,\r\n     enteringAnimation: AnimationTuple\r\n   ) {\r\n     this.initializeSlides();\r\n     const leavingElIndex = wrapIndex(\r\n       this.slideIndex - nextSlideOffset,\r\n       this.slideElements.length\r\n     );\r\n     const elLeaving = this.slideElements[leavingElIndex];\r\n     showSlide(elLeaving);\r\n \r\n     // Animate out current element\r\n     const leavingAnim = elLeaving.animate(\r\n       leavingAnimation[0],\r\n       leavingAnimation[1]\r\n     );\r\n \r\n     // Entering slide\r\n     const newSlideEl = this.slideElements[this.wrappedIndex];\r\n \r\n     // Show the new slide\r\n     showSlide(newSlideEl);\r\n \r\n     // Teleport it out of view and animate it in\r\n     const enteringAnim = newSlideEl.animate(\r\n       enteringAnimation[0],\r\n       enteringAnimation[1]\r\n     );\r\n \r\n     try {\r\n       // Wait for animations\r\n       await Promise.all([leavingAnim.finished, enteringAnim.finished]);\r\n \r\n       // Hide the element that left\r\n       hideSlide(elLeaving);\r\n     } catch {\r\n       /* Animation was cancelled */\r\n     }\r\n   }\r\n \r\n   private initializeSlides() {\r\n     for (let i = 0; i < this.slideElements.length; i++) {\r\n       const slide = this.slideElements[i];\r\n       slide.getAnimations().forEach((anim) => anim.cancel());\r\n       if (i === this.wrappedIndex) {\r\n         showSlide(slide);\r\n       } else {\r\n         hideSlide(slide);\r\n       }\r\n     }\r\n   }\r\n }\r\n \r\n function getMaxElHeight(els: HTMLElement[]): number {\r\n   return Math.max(0, ...els.map((el) => el.getBoundingClientRect().height));\r\n }\r\n \r\n function hideSlide(el: HTMLElement) {\r\n   el.classList.add(\"slide-hidden\");\r\n }\r\n \r\n function showSlide(el: HTMLElement) {\r\n   el.classList.remove(\"slide-hidden\");\r\n }\r\n \r\n function wrapIndex(idx: number, max: number): number {\r\n   return ((idx % max) + max) % max;\r\n }\r\n \r\n declare global {\r\n   interface HTMLElementTagNameMap {\r\n     \"simple-carousel\": SimpleCarousel;\r\n   }\r\n }"]}